{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactList","contacts","length","map","contact","Filter","filter","App","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","handleRemoveContact","handleFilterChange","handleContactFiltered","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e1aff05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  phone: \"\",\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  state = INITIAL_STATE;\r\n\r\n  handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, phone } = this.state;\r\n    const { onAdd } = this.props;\r\n\r\n    const isValidatedForm = this.validateForm();\r\n\r\n    if (!isValidatedForm) return;\r\n\r\n    onAdd({ id: uuid(), name, phone });\r\n    this.resetForm();\r\n  };\r\n  validateForm = () => {\r\n    const { name, phone } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n    if (!name || !phone) {\r\n      alert(\"Some filed is empty\");\r\n      return false;\r\n    }\r\n    return onCheckUnique(name);\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n\r\n  render() {\r\n    const { name, phone } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={this.handleChangeForm}\r\n        />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          placeholder=\"Enter phone number\"\r\n          value={phone}\r\n          onChange={this.handleChangeForm}\r\n        />\r\n        <button type=\"submit\">AddContact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n  return (\r\n    <li>\r\n      {name}: {phone} <button onClick={() => onRemove(id)}>delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <ContactListItem {...contact} onRemove={onRemove} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n      placeholder=\"Enter name for Search\"\r\n    />\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\n\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  handleAddContact = (newContact) =>\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [...contacts, newContact],\r\n    }));\r\n\r\n  handleCheckUniqueContact = (name) => {\r\n    const { contacts } = this.state;\r\n    const isExistContact = !!contacts.find((contact) => contact.name === name);\r\n    isExistContact && alert(`Contact is already exist`);\r\n    return !isExistContact;\r\n  };\r\n\r\n  handleRemoveContact = (id) =>\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n\r\n  handleFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const handleContactFiltered = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <h2>Form Contact</h2>\r\n        <ContactForm\r\n          onAdd={this.handleAddContact}\r\n          onCheckUnique={this.handleCheckUniqueContact}\r\n        />\r\n        <h2>Contact list</h2>\r\n        <Filter filter={filter} onChange={this.handleFilterChange} />\r\n        <ContactList\r\n          contacts={handleContactFiltered}\r\n          onRemove={this.handleRemoveContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}